import{_ as t,c as n,o as i,a2 as o}from"./chunks/framework.CHomSxuB.js";const a="/screenshots/cloud-linux.png",l="/screenshots/cloud-linux-step1.png",s="/screenshots/cloud-linux-step2.png",x=JSON.parse('{"title":"CloudLinux","description":"","frontmatter":{},"headers":[{"level":3,"title":"URL","slug":"url","link":"#url","children":[]},{"level":3,"title":"Step 1 – License and Component Selection","slug":"step-1-–-license-and-component-selection","link":"#step-1-–-license-and-component-selection","children":[]},{"level":3,"title":"Step 2 – Installation Logs and Output","slug":"step-2-–-installation-logs-and-output","link":"#step-2-–-installation-logs-and-output","children":[]}],"relativePath":"user-guide/admin-panel/cloudlinux.md","filePath":"user-guide/admin-panel/cloudlinux.md"}'),r={name:"user-guide/admin-panel/cloudlinux.md"};function u(c,e,d,p,h,m){return i(),n("div",null,e[0]||(e[0]=[o('<h1 id="cloudlinux" tabindex="-1">CloudLinux <a class="header-anchor" href="#cloudlinux" aria-label="Permalink to &quot;CloudLinux&quot;">​</a></h1><p>The <strong>CloudLinux</strong> page provides detailed information about the CloudLinux module – a Linux-based operating system designed for hosting environments. It improves stability, density, and security by isolating users and managing resource allocation on a per-account basis.</p><p><img src="'+a+'" alt="CloudLinux"></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>CloudLinux is integrated into AdminBolt as an optional module that enhances server performance and security. It provides per-user resource control, hardened kernels, and advanced technologies such as CageFS for account isolation.</p><h3 id="url" tabindex="-1">URL <a class="header-anchor" href="#url" aria-label="Permalink to &quot;URL&quot;">​</a></h3><p><code>/admin/modules/cloudlinux</code></p><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><blockquote><p>CloudLinux is a Linux-based operating system designed to improve security, performance, and stability in multi-tenant hosting environments.</p><p>By isolating each hosting account into its own lightweight virtualized environment, CloudLinux ensures that one user’s actions do not negatively affect others on the same server.</p></blockquote><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Resource isolation</li><li>PHP version selector</li><li>Hardened kernel</li><li>CageFS technology</li><li>Account monitoring</li></ul><h2 id="installation-process" tabindex="-1">Installation Process <a class="header-anchor" href="#installation-process" aria-label="Permalink to &quot;Installation Process&quot;">​</a></h2><p>When clicking the <strong>Install</strong> button, a two-step installation wizard will appear:</p><h3 id="step-1-–-license-and-component-selection" tabindex="-1">Step 1 – License and Component Selection <a class="header-anchor" href="#step-1-–-license-and-component-selection" aria-label="Permalink to &quot;Step 1 – License and Component Selection&quot;">​</a></h3><p><img src="'+l+'" alt="Step 1"></p><ul><li>You are prompted to enter a <strong>CloudLinux Activation Key</strong>.</li><li>You can optionally select: <ul><li>PHP Selector</li><li>Node.js Selector</li><li>Python Selector</li></ul></li><li>Click <strong>Next</strong> to proceed to the installation.</li></ul><h3 id="step-2-–-installation-logs-and-output" tabindex="-1">Step 2 – Installation Logs and Output <a class="header-anchor" href="#step-2-–-installation-logs-and-output" aria-label="Permalink to &quot;Step 2 – Installation Logs and Output&quot;">​</a></h3><p><img src="'+s+'" alt="Step 2"></p><ul><li>This step shows the full command-line output of the installation process.</li><li>The system attempts to download and install the required CloudLinux packages.</li><li>In case of issues (invalid license, missing packages, etc.), detailed error logs are shown.</li></ul>',19)]))}const f=t(r,[["render",u]]);export{x as __pageData,f as default};
