import{_ as t,c as o,o as i,ag as a}from"./chunks/framework.Ds6Eueu6.js";const s="/screenshots/execution-logs.png",p=JSON.parse('{"title":"Execution Logs","description":"","frontmatter":{},"headers":[],"relativePath":"user-guide/admin-panel/execution-logs.md","filePath":"user-guide/admin-panel/execution-logs.md"}'),l={name:"user-guide/admin-panel/execution-logs.md"};function n(r,e,c,g,u,d){return i(),o("div",null,e[0]||(e[0]=[a('<h1 id="execution-logs" tabindex="-1">Execution Logs <a class="header-anchor" href="#execution-logs" aria-label="Permalink to &quot;Execution Logs&quot;">​</a></h1><p>The <strong>Execution Logs</strong> page provides a detailed audit trail of system tasks, commands, and automated actions within the AdminBolt environment.</p><p><img src="'+s+'" alt="Execution Logs Interface"></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p><strong>URL:</strong> <code>/admin/execution-logs</code></p><p>This page lists all logged executions that occur across the system — such as reconfigurations, updates, and service operations. Each log entry displays the following columns:</p><ul><li><strong>Source</strong> – Indicates the origin of the task (e.g., <code>bolt-cli</code>)</li><li><strong>Level</strong> – The severity or result of the execution (<code>success</code>, <code>failed</code>, <code>pending</code>, etc.)</li><li><strong>Message</strong> – Short description of the operation that was triggered.</li><li><strong>Time</strong> – Timestamp showing when the execution occurred.</li></ul><p>At the top of the page, there is also a <strong>Truncate Logs</strong> button which allows administrators to clear all execution logs from the system.</p><h2 id="search" tabindex="-1">Search <a class="header-anchor" href="#search" aria-label="Permalink to &quot;Search&quot;">​</a></h2><p>The search input allows you to quickly filter results by typing keywords. It supports searching across the following columns:</p><ul><li><strong>Source</strong></li><li><strong>Level</strong></li><li><strong>Message</strong></li><li><strong>Time</strong></li></ul><h2 id="filters" tabindex="-1">Filters <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;Filters&quot;">​</a></h2><p>The <strong>Filters</strong> panel lets you refine the list of execution logs. The following options are available:</p><ul><li><strong>Status</strong> – Dropdown filter with values: <ul><li>All</li><li>Pending</li><li>Running</li><li>Completed</li><li>Failed</li><li>Success</li></ul></li><li><strong>From</strong> – Date picker to set the starting date for logs.</li><li><strong>Until</strong> – Date picker to set the ending date for logs.</li></ul><p>You can combine these filters to narrow down log entries to a specific date range or execution status.</p><h2 id="pagination" tabindex="-1">Pagination <a class="header-anchor" href="#pagination" aria-label="Permalink to &quot;Pagination&quot;">​</a></h2><p>At the bottom of the logs table, you can control how many entries are displayed per page. The available pagination options are:</p><ul><li>5</li><li>10</li><li>25</li><li>50</li><li>All</li></ul>',18)]))}const m=t(l,[["render",n]]);export{p as __pageData,m as default};
